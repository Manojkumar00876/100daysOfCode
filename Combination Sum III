class Solution {
    static void func(int[] arr,int idx , int k , List<List<Integer>> list , List<Integer> temp, int target)  {

        if(target == 0 && temp.size() == k) {
            list.add(new ArrayList<>(temp));
            return;
        }

        if(idx > arr.length) return;
        if(temp.size() > k) return;

        for(int i=idx; i<arr.length; i++) {
            if(arr[i] <= target) {
                temp.add(arr[i]);
                func(arr , i+1 , k , list, temp , target-arr[i]);
                temp.remove(temp.size()-1);
            }
        }

    }
    public List<List<Integer>> combinationSum3(int k, int n) {
        int[] arr =  new int[9];
        for(int i=1; i<=9; i++){
            arr[i-1] = i;
        }
        List <List <Integer>> list = new ArrayList<>();
        List <Integer> temp = new ArrayList<>();

        func(arr, 0 , k , list , temp , n);

        return list;
    }
}
