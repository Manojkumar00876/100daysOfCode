class Solution {
    public int longestCommonSubsequence(String w1, String w2) {
        char[] s1 = w1.toCharArray();
        char[] s2 = w2.toCharArray();
        int n1 = s1.length;
        int n2 = s2.length;
        int lcs = 0;
        int[][] dp = new int[n1+1][n2+1];

        for(int i=0; i<=n1; i++) {
            dp[i][0] = 0; 
        }

        for(int i=0; i<=n2; i++){
            dp[0][i] = 0;
        }

        for(int i=1; i<=n1; i++) {
            for(int j=1; j<=n2; ++j) {
                if(s1[i-1] == s2[j-1]) {
                    dp[i][j] = 1+dp[i-1][j-1];
                   if(lcs < dp[i][j]){
                       lcs = dp[i][j];
                   }
                }
                else {
                     dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }    
        }
          return lcs;
    }
}
